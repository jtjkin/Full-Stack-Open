{"version":3,"sources":["components/Filter.js","services/ServiceMethods.js","components/Person.js","components/Persons.js","components/Form.js","components/ErrorMessage.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","filterHandler","baseURL","axios","get","then","response","data","newInfo","post","id","put","request","delete","console","log","Person","className","key","person","name","phonenumber","onClick","window","confirm","ServiceMethods","setPersons","allPersons","n","setNewFilteredPersons","setMessage","setTimeout","Persons","persons","map","Form","onSubmit","handleSubmit","nameValue","nameChange","numberValue","numberChange","type","ErrorMessage","message","messageClass","App","useState","newName","setNewName","newNumber","setNewNumber","setNewFilter","filteredPersons","setMessageClass","useEffect","all","checkUniques","includes","event","target","filtered","toLowerCase","preventDefault","find","newPerson","returnedResponse","person2","catch","error","returnedInfo","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a225d7ec.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return(\r\n        <div>\r\n            filter shown with <input \r\n            value={props.filter} \r\n            onChange={props.filterHandler}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseURL = 'https://sleepy-brook-28895.herokuapp.com/api/persons'\r\n//const baseURL = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n \r\nconst addNew = (newInfo) => {\r\n    const request = axios.post(baseURL, newInfo)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newInfo) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newInfo)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    console.log(request.then(response => response.data))\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    addNew,\r\n    update,\r\n    remove\r\n}","import React from 'react';\r\nimport ServiceMethods from '../services/ServiceMethods'\r\n\r\nconst Person = (props) => {\r\n\r\n    const removeItem = () => {\r\n        const removal = window.confirm(`Delete ${props.person.name}?`)\r\n        if (removal === true) { \r\n            ServiceMethods\r\n            .remove(props.person.id)\r\n            \r\n            props.setPersons(props.allPersons\r\n                .filter(n => n.id !== props.person.id))\r\n            props.setNewFilteredPersons(props.allPersons\r\n                .filter(n => n.id !== props.person.id))\r\n\r\n            props.setMessage(`${props.person.name} has been removed.`)\r\n            setTimeout( () => {\r\n                props.setMessage(null)\r\n            }, 2000)    \r\n        }        \r\n    }\r\n\r\n    return(\r\n        <p className=\"person\" key={props.person.id}>{props.person.name} {props.person.phonenumber} <button onClick={removeItem}>delete</button>\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = (props) => {\r\n\r\n    return(\r\n        <div>\r\n            {props.persons.map( (person) =>\r\n            <Person key={person.name} \r\n                    person={person} \r\n                    setPersons={props.setPersons}\r\n                    setNewFilteredPersons={props.setNewFilteredPersons}\r\n                    allPersons={props.allPersons}\r\n                    setMessage={props.setMessage}/>)}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Form = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                name: <input \r\n                value={props.nameValue} \r\n                onChange={props.nameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input \r\n                value={props.numberValue} \r\n                onChange={props.numberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst ErrorMessage = ({message, messageClass}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={messageClass}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import React, {useState, useEffect} from 'react';\nimport Filter from './components/Filter';\nimport Persons from './components/Persons';\nimport Form from './components/Form';\nimport ServiceMethods from './services/ServiceMethods'\nimport ErrorMessage from './components/ErrorMessage'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [filter, setNewFilter] = useState(\"\")\n  const [filteredPersons, setNewFilteredPersons] = useState([])\n  const [message, setMessage] = useState(null)\n  const [messageClass, setMessageClass] = useState(\"message\")\n\n  useEffect(() => {\n    ServiceMethods\n      .getAll()\n      .then(all => {\n        setPersons(all)\n        setNewFilteredPersons(all)\n      })\n  }, [])\n\n  const changeHandler = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const numberHandler = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const filterHandler = (event) => {\n    setNewFilter(event.target.value)\n\n    if (event.target.value === \"\") {\n      setNewFilteredPersons(persons)\n    }\n\n    const filtered = persons.filter(person =>\n      person.name.toLowerCase().includes(event.target.value))\n    \n    setNewFilteredPersons(filtered) \n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n      if(checkUniques()) {\n       const isAlready = window.confirm(`${newName} is already added to the phonebook, update old number?`)\n\n       if (isAlready === true) {\n          const person = persons.find(person => person.name === newName)\n          const newPerson = {...person, phonenumber: newNumber}\n\n          ServiceMethods\n          .update(person.id, newPerson)\n          .then(returnedResponse => {\n            setPersons(persons.map(person2 => person2.id !== person.id ? person2 : returnedResponse))\n            setNewFilteredPersons(persons.map(person2 => person2.id !== person.id ? person2 : returnedResponse))\n            setMessage(`${newName}'s phonenumber has been updated!`)\n            setTimeout( () => {\n              setMessage(null)\n            }, 2000)\n          }).catch(error => {\n            setMessageClass(\"errorMessage\")\n            setMessage(`Cannot update. ${person.name} has already been deleted from server.`)\n            setTimeout( () => {\n              setMessage(null)\n              setMessageClass(\"message\")\n            }, 3000)\n            setNewName(\"\")\n            setNewNumber(\"\")\n            return\n          })\n       }\n\n       setNewName(\"\")\n       setNewNumber(\"\")\n       return\n     }\n\n    const newInput = {\n      name: newName,\n      phonenumber: newNumber\n    }\n\n    ServiceMethods\n      .addNew(newInput)\n      .then(returnedInfo => {\n        setPersons(persons.concat(returnedInfo))\n        setNewFilteredPersons(persons.concat(returnedInfo))\n        setMessage(`${newName} has been added!`)\n        setTimeout( () => {\n          setMessage(null)\n        }, 2000)  \n      }).catch(error => {\n        console.log(error.response.data)\n        setMessageClass(\"errorMessage\")\n        setMessage(`${error.response.data.error}`)\n        setTimeout( () => {\n          setMessageClass(\"message\")\n          setMessage(null)\n        }, 3000)  \n      })\n\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  const checkUniques = () => {\n    const found = persons.map( (person) =>\n    person.name)\n    return found.includes(newName)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ErrorMessage message={message} messageClass={messageClass}/>\n      <Filter value={filter} filterHandler={filterHandler}/>\n      <h2>Add new</h2>\n      <Form handleSubmit={handleSubmit}\n        nameValue={newName}\n        nameChange={changeHandler}\n        numberValue={newNumber}\n        numberChange={numberHandler}/>\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} \n        setPersons={setPersons} \n        setNewFilteredPersons={setNewFilteredPersons}\n        allPersons={persons}\n        setMessage={setMessage}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}